import sys
sys.setrecursionlimit(100000)
input = sys.stdin.readline

def find_cluster_house(visited, houses, a, b, n):
    global houses_num
    houses_num += 1
    visited[a][b] = True
    if a != (n-1) and not visited[a+1][b] and houses[a+1][b] == 1:
        find_cluster_house(visited, houses, a+1, b, n)
    if a != 0 and not visited[a-1][b] and houses[a-1][b] == 1:
        find_cluster_house(visited, houses, a-1, b, n)
    if b != (n-1) and not visited[a][b+1] and houses[a][b+1] == 1:
        find_cluster_house(visited, houses, a, b+1, n)
    if b != 0 and not visited[a][b-1] and houses[a][b-1] == 1:
        find_cluster_house(visited, houses, a, b-1, n)

n = int(input())
houses = [list(map(int, input().strip())) for _ in range(n)]
cluster_num = 0
houses_num = 0
houses_num_list = []
visited = [[False]*n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if not visited[i][j]:
            if houses[i][j] == 0:
                visited[i][j] = True
            else:
                find_cluster_house(visited, houses, i, j, n)
                cluster_num += 1
                houses_num_list.append(houses_num)
                houses_num = 0


print(cluster_num)
for x in sorted(houses_num_list):
    print(x)
for x in sorted(houses_num_list):
    print(x)
